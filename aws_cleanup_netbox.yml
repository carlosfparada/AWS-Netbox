---

- name: Get nodes from Inventory and add to Groups
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - include_role: 
      name: utils_hosts_aws

- name: Cleanup data on Netbox
  hosts: localhost
  gather_facts: false
  vars_files: vars/main.yml
  vars:
    ansible_connection: local
  tasks:
    - name: Set Netbox URL
      set_fact:
        netbox_url: "http://{{ hostvars[groups['netbox'][0]].public_dns_name }}:8000"
        
    - name: Create a Token
      ansible.builtin.uri:
        url: "{{ netbox_url }}/api/users/tokens/provision/"
        method: POST
        body: |
          { 
            "username": "admin",
            "password": "{{ ec2_netbox_pass }}"
          }
        status_code: 201
        body_format: json
        headers:
          Content-Type: "application/json"
          Accept: "application/json; indent=4"
      run_once: true
      delegate_to: localhost
      register: netbox_token

    - name: Cleanup VLANs data on Netbox
      netbox.netbox.netbox_vlan:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        validate_certs: no
        data:
          site: "{{ item.value.site.name }}"
          name: "{{ item.value.name }}"
          vid: "{{ item.value.vid }}"          
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'vlans',
                    api_endpoint=netbox_url,
                    token=netbox_token.json.key,
                    validate_certs=False) }}"

    - name: Cleanup IPv4 addresses data on Netbox
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        validate_certs: no
        data: 
          assigned_object:
            device: "{{ item.value.assigned_object.device.name }}"
            name: "{{ item.value.assigned_object.name }}"
          #family: "{{ item.value.family.value }}"
          address: "{{ item.value.address }}"
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'ip-addresses',
                    api_endpoint=netbox_url,
                    token=netbox_token.json.key,
                    validate_certs=False) }}"

    - name: Cleanup interfaces data on Netbox
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        validate_certs: no
        data: 
          device: "{{ item.value.device.name }}"
          name: "{{ item.value.name }}"
          type: "{{ item.value.type.label }}"
          description: "{{ item.value.name }}"
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'interfaces',
                    api_endpoint=netbox_url,
                    token=netbox_token.json.key,
                    validate_certs=False) }}"

    - name: Cleanup devices data on Netbox
      netbox.netbox.netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        validate_certs: no
        data: 
          name: "{{ item.value.name }}"
          site: "{{ site }}"
          serial: "{{ item.value.serial }}"
          device_type: "{{ item.value.device_type }}"
          device_role: "{{ item.value.device_role }}"
          comments: "Added by AAP"
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'devices',
              api_endpoint=netbox_url,
              token=netbox_token.json.key,
              validate_certs=False) }}"

    - name: Cleanup device roles data on Netbox
      netbox.netbox.netbox_device_role:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        validate_certs: no
        data: 
          name: "{{ item.value.name }}"
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'device-roles',
                    api_endpoint=netbox_url,
                    token=netbox_token.json.key,
                    validate_certs=False) }}"

    - name: Cleanup device types data on Netbox
      netbox.netbox.netbox_device_type:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        validate_certs: no
        data: 
          model: "{{ item.value.model }}"
          manufacturer: "{{ item.value.manufacturer }}"
          slug: "{{ item.value.slug }}"
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'device-types',
                    api_endpoint=netbox_url,
                    token=netbox_token.json.key,
                    validate_certs=False) }}"

    - name: Cleanup manufacturer data on Netbox
      netbox.netbox.netbox_manufacturer:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        validate_certs: no
        data: 
          name: "{{ item.value.name }}"
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'manufacturers',
              api_endpoint=netbox_url,
              token=netbox_token.json.key,
              validate_certs=False) }}"

    - name: Cleanup sites data on Netbox
      netbox.netbox.netbox_site:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        validate_certs: no
        data: 
          name: "{{ item.value.name }}"
          slug: "{{ item.value.slug }}"
          description: "Site located in {{ item.value.slug }}"
          status: "{{ item.value.status.label }}"
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'sites',
              api_endpoint=netbox_url,
              token=netbox_token.json.key,
              validate_certs=False) }}"

    - name: Delete Token
      netbox.netbox.netbox_token:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token.json.key }}"
        data:
            key: "{{ netbox_token.json.key }}"
        state: absent
      run_once: true
      delegate_to: localhost
      