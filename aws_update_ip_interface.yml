---

- name: Get nodes from Inventory and add to Groups
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - include_role: 
      name: utils_hosts_aws


# data: {'id': 4, 'url': '/api/ipam/ip-addresses/4/', 'display': '2.3.4.5/24', 'family': {'value': 4, 'label': 'IPv4'}, 'address': '2.3.4.5/24', 'vrf': None, 'tenant': None, 'status': {'value': 'active', 'label': 'Active'}, 'role': None, 'assigned_object_type': 'dcim.interface', 'assigned_object_id': 2, 'assigned_object': {'id': 2, 'url': '/api/dcim/interfaces/2/', 'display': 'GigabitEthernet2', 'device': OrderedDict([('id', 1), ('url', '/api/dcim/devices/1/'), ('display', 'ec2-54-196-88-149.compute-1.amazonaws.com'), ('name', 'ec2-54-196-88-149.compute-1.amazonaws.com')]), 'name': 'GigabitEthernet2', 'cable': None, '_occupied': False}, 'nat_inside': None, 'nat_outside': [], 'dns_name': '', 'description': '', 'comments': '', 'tags': [], 'custom_fields': {}, 'created': '2025-03-28T14:30:37.678047Z', 'last_updated': '2025-03-28T14:30:37.678068Z'}

- name: Update interface IP (Cisco)
  hosts: "{{ device }}"
  gather_facts: false
  vars_files: vars/main.yml
  vars:
    ansible_connection: network_cli
    ansible_network_os: ios
  tasks:
    - name: Debug Netbox data structure (Cisco)
      debug:
        msg: "{{ data }}" 
      when: hostvars[inventory_hostname].tags.Name | regex_search("^cisco-(.*)$")

    - name: Debug Netbox relevant variables (Cisco)
      debug:
        msg: "{{ device }}, {{ interface }}, {{ ip_address }}, {{ address_family }}, {{ description }}, {{ event }}, {{ timestamp }}, {{ data }}" 
      when: hostvars[inventory_hostname].tags.Name | regex_search("^cisco-(.*)$")

    - name: Update IPv4 to l3 interface on {{ device }} (Cisco)
      cisco.ios.ios_l3_interfaces:
        config: 
          - name: "{{ interface }}"
            ipv4:
            - address: "{{ ip_address }}"
        state: merged
      become: true
      when: address_family == '4' and hostvars[inventory_hostname].tags.Name | regex_search("^cisco-(.*)$")

    - name: Update IPv6 to l3 interface on {{ device }} (Cisco)
      cisco.ios.ios_l3_interfaces:
        config: 
          - name: "{{ interface }}"
            ipv6:
            - address: "{{ ip_address }}"
        state: merged
      become: true
      when: address_family == '6' and hostvars[inventory_hostname].tags.Name | regex_search("^cisco-(.*)$")

    - name: Update description to interface on {{ device }} (Cisco)
      cisco.ios.ios_interfaces:
        config:
        - name: "{{ interface }}"
          description: "{{ description }}"
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^cisco-(.*)$")

