---

- name: Get nodes from Inventory and add to Groups
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - include_role: 
      name: utils_hosts_aws


- name: Update DNS configs (Arista) 
  hosts: arista
  gather_facts: false
  vars_files: vars/main.yml
  vars:
    ansible_connection: network_cli
    ansible_network_os: eos
  tasks:
    - name: Set facts
      ansible.builtin.set_fact:
        data: "{{ ansible_eda.event.payload.data }}"

    - name: Debug Netbox data structure (Arista) 
      debug:
        msg: "{{ data }}" 
      when: hostvars[inventory_hostname].tags.Name | regex_search("^arista-2$")

    - name: Debug Netbox relevant variables (Arista) 
      debug:
        msg: "{{ data.name }}, {{ data.data.dns_servers }}" 
      when: hostvars[inventory_hostname].tags.Name | regex_search("^arista-2$")

    - name: Clean Up DNS Server (Arista) 
      arista.eos.eos_config:
        lines:
          - no ip name-server
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^arista-2$")

    - name: Create DNS Servers (Arista) 
      arista.eos.eos_config:
        lines:
          - ip name-server {{ item }}
      loop: "{{ data.data.dns_servers }}"
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^arista-2$")


- name: Update DNS configs (Cisco) 
  hosts: cisco
  gather_facts: false
  vars_files: vars/main.yml
  vars:
    ansible_connection: network_cli
    ansible_network_os: ios
  tasks:
    - name: Set facts
      ansible.builtin.set_fact:
        data: "{{ ansible_eda.event.payload.data }}"

    - name: Debug Netbox data structure (Cisco) 
      debug:
        msg: "{{ data }}" 
      when: hostvars[inventory_hostname].tags.Name | regex_search("^cisco-2$")

    - name: Debug Netbox relevant variables (Cisco) 
      debug:
        msg: "{{ data.name }}, {{ data.data.dns_servers }}" 
      when: hostvars[inventory_hostname].tags.Name | regex_search("^cisco-2$")

    - name: Clean Up DNS Server (Cisco) 
      cisco.ios.ios_config:
        lines:
          - no ip name-server
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^cisco-2$")

    - name: Create DNS Servers (Cisco) 
      cisco.ios.ios_config:
        lines:
          - ip name-server {{ item }}
      loop: "{{ data.data.dns_servers }}"
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^cisco-2$")

    - name: Save running to startup when modified
      cisco.ios.ios_config:
        save_when: modified
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^cisco-2$")


- name: Update DNS configs (Juniper) 
  hosts: juniper
  gather_facts: false
  vars_files: vars/main.yml
  vars:
    ansible_connection: netconf
    ansible_network_os: junos
    ansible_command_timeout: 300
  tasks:
    - name: Set facts
      ansible.builtin.set_fact:
        data: "{{ ansible_eda.event.payload.data }}"

    - name: Debug Netbox data structure (Juniper) 
      debug:
        msg: "{{ data }}" 
      when: hostvars[inventory_hostname].tags.Name | regex_search("^juniper-2$")

    - name: Debug Netbox relevant variables (Juniper) 
      debug:
        msg: "{{ data.name }}, {{ data.data.dns_servers }}" 
      when: hostvars[inventory_hostname].tags.Name | regex_search("^juniper-2$")

    - name: Clean Up DNS Server (Juniper) 
      junipernetworks.junos.junos_config:
        lines:
          - no ip name-server
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^juniper-2$")

    - name: Create DNS Servers (Juniper) 
      junipernetworks.junos.junos_config:
        lines:
          - "set system name-server {{ item }}"
      loop: "{{ data.data.dns_servers }}"
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^juniper-2$")

    - name: Check Juniper OS correctness of commit configuration
      junipernetworks.junos.junos_config:
        check_commit: true
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^juniper-2$")
    # - name: Rollback Juniper OS to last commit
    #   junipernetworks.junos.junos_config:
    #     rollback: 0
    - name: Confirm previous Juniper OS commit
      junipernetworks.junos.junos_config:
        confirm_commit: true
      become: true
      when: hostvars[inventory_hostname].tags.Name | regex_search("^juniper-2$")
